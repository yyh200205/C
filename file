#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<stdlib.h>
int main()
{
	FILE* fp;//定义文件指针
	char ch;
	char filename[10] = { 0 };
	printf("请输入所用的文件名:");
	scanf("%s",filename);//输入文件名
	getchar();//用来消化最后输入的回车符
	if ((fp = fopen(filename, "w")) == NULL)//打开输出文件并使fp指向此文件
	{
		printf("cannot open file\n");//如果打开出错就输出打不开
		exit(0);//终止程序
	}
	printf("请输入一个准备存储到磁盘的字符串（以#结束）:");
	ch = getchar();//接受从键盘输入的第一个字符
	while (ch != '#')//当输入'#’时结束
	{
		fputc(ch, fp);//向磁盘文件输出一个字符
		putchar(ch);//将输出的字符显示在屏幕上
		ch = getchar();//再接收从键盘输入的一个字符
	}
	fclose(fp);//关闭文件
	putchar(10);//向屏幕输出一个换行符
    system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
//从键盘读入若干个字符串，对它们按照字母大小的顺序排序
//然后把排好序的字符串送到磁盘文件中保存
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main()
{
    FILE* fp;
    char str[3][10];//str是用来存放字符串的二维数组
    char temp[10];//temp是临时数组
    int i,j,k,n=3;
    printf("Enter strings:\n");
    for(i=0;i<n;i++)
    gets(str[i]);//输入字符串

    for(i=0;i<n-1;i++)//用选择法对字符串排序
    {
        k=i;
        for(j=i+1;j<n;j++)
            if(strcmp(str[k],str[j])>0)//比较函数，比较之后返回整数
            k=j;
        if(k!=i)
        {
            strcpy(temp,str[i]);//复制函数
            strcpy(str[i],str[k]);
            strcpy(str[k],temp);
        }
    }
    if((fp=fopen("D:\\CC\\string.dat","w"))==NULL)//打开磁盘文件
    {
        printf("can't open file\n");
        exit(0);
    }
    printf("\nThe new sequence:\n");
    for(i=0;i<n;i++)
    {
        fputs(str[i],fp);//向磁盘文件写一个字符串
        fputs("\n",fp);//然后输入一个换行符
        printf("%s\n",str[i]);//在屏幕上显示
    }
    system("pause");
    return 0;
}


#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
//从键盘输入10个学生的有关数据，然后把他们转存到磁盘文件上去
#define SIZE 10
//从main函数输入10个学生的数据
//用save函数实现向磁盘输出学生数据
//用fwrite函数一次输出一个学生的数据
//结构体
struct Student_type
{
	char name[10];
	int num;
	int age;
	char addr[15];
}stud[SIZE];//定义全局结构体数组stud，包含10个学生数据

	void save()
	{
		FILE* fp;
		int i;
		if ((fp = fopen("stu.dat", "wb")) == NULL)
		{
			printf("cannot open file\n");
				exit(0);
		}
		for (i = 0; i < SIZE; i++)
		{
			if (fwrite(&stud[i], sizeof(struct Student_type), 1, fp) != 1)
			{
				printf("file write error\n");
			}
			fclose(fp);
		}
	}

	int main()
	{
		int i;
		printf("Please enter data of students:\n");
		for (i = 0; i < SIZE; i++)
		{
			scanf("%s%d%d%s", stud[i].name, &stud[i].num, &stud[i].age, stud[i].addr);
		}
		save();
		return 0;
	}
//如何去显示已经存入文件中的数据
	int main()
	{
		int i;
		FILE* fp;
		if ((fp = fopen("stu.dat", "wb")) == NULL)//打开输入文件stu.dat
		{
			printf("cannot open file\n");
			exit(0);
		}
		for (i = 0; i < SIZE; i++)
		{
			fread(&stud[i], sizeof(struct Student_type), 1, fp);//从fp指向的文件读入一组数据
			printf("%-10s %4d %4d %-15s\n", stud[i].name, &stud[i].num, &stud[i].age, stud[i].addr);
			//在屏幕上输出这组数据
		}
		fclose(fp);
		return 0;
}
