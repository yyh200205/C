Add函数
int Add(int x,int y)
{
    int z=0;
    z=x+y;
    return z;
}
int main()
{
    int a=0;
    int b=0;
    printf("请输入a和b的值:");
    scanf("%d,%d",&a,&b);
    int sum=Add(a,b);
    printf("%d\n",sum);
    system("pause");
    return 0;
}

//strcpy（放的是目的地，放的是原函数）复制函数
int main()
{
    char arr1[]="bit";
    char arr2[20]={0};
    strcpy(arr2,arr1);//第一个放的是目的地，第二个放的是字符串来源
    printf("%s\n",arr2);
    system("pause");
    return 0;
}

//memset(起始地址，填充的值，设置的长度)
//memory set 内存设置
int main()
{
    char arr[]="hello,world";
    memset(arr,'*',3);
    printf("%s\n",arr);
    system("pause");
    return 0;
}

//比大小
int Max(int x,int y)
{
    int z=0;
    z=x>y?x:y;
    return z;
}
int main()
{
    int a=0;
    int b=0;
    printf("请输入a和b的数值:");
    scanf("%d,%d",&a,&b);
    int max=Max(a,b);
    printf("%d\n",max);
    system("pause");
    return 0;
}

//交换函数
//第二个函数结果错了，是因为x，y和a，b的地址不一样，在函数内部，只交换了x，y的值，而a，b的值没有发生交换
//实质上是说只交换了形参，没有交换实参。
传值调用                    传址调用
void swap(int*pa,int*pb)//void swap(int x,int y)//这个函数不能够实现
{                       //{
    int z=*pa;          //    int z=0;
    *pa=*pb;            //    x=y;
    *pb=z;              //    y=z;
}                       //}
int main()
{
    int a=0;
    int b=0;
    printf("请输入a和b的值:");
    scanf("%d,%d",&a,&b);
    swap(&a,&b);
    printf("a=%d\nb=%d\n",a,b);
    system("pause");
    return 0;
}
