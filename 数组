//逐级输出字符串因素
#include<stdio.h>
#include<stdlib.h>
int main()
{
    char arr[]="abcdef";
    int i=0;
    for(i=0;i<6;i++)
    {
        printf("%c ",arr[i]);
    }
    system("pause");
    return 0;
}

#include<stdio.h>
#include<stdlib.h>
int main()
{
    int arr[3][4]={1,2,3,4,5,6,7,8,9,0,11,12};
    int i=0;
    for(i=0;i<3;i++)
    {
        for(int j=0;j<4;j++)
        {
            printf("%-2d ",arr[i][j]);
        }
        printf("\n");
    }
    system("pause");
    return 0;
}
//冒泡排序
void bubble_sort(int arr[],int sz)
{
    int flag=1;
    int a=0;
    for(int i=0;i<sz-1;i++)
    {
        for(int j=0;j<sz-1-i;j++)
        {
            if(arr[j]>arr[j+1])
            {
                a=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=a;
                flag=0;
            }
        }
    }
}
int main()
{
    int arr[10]={3,4,2,7,5,1,6,10,9,8};
    int sz=sizeof(arr)/sizeof(arr[0]);
    bubble_sort(arr,sz);
    int i=0;
    for(i=0;i<10;i++)
    {
        printf("%d ",arr[i]);
    }
    system("pause");
    return 0;
}

//数组的地址
int main()
{
    int arr[]={1,2,3,4,5,6,7};
    printf("%p\n",arr);//第一个元素的地址
    printf("%p\n",arr+1);

    printf("%p\n",&arr[0]);//第一个元素的地址
    printf("%p\n",&arr[0]+1);

    printf("%p\n",&arr);//数组的起始地址
    printf("%p\n",&arr+1);//数组起始地址跳过去到最后一个地址后的起始地址
    system("pause");
    return 0;
}
